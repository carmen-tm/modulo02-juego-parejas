{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["/* eslint-disable no-console */\n'use strict';\n\n//Get elements\nconst inputsRadioEls = document.querySelectorAll('.number-cards__button');\nconst btnStartEl = document.querySelector('.btn-start');\nconst listResultsEl = document.querySelector('.app-results');\nconst appMessageEl = document.querySelector('.app-message');\n\nlet NUMBER = '';\nlet cardsFromAPI = [];\n\nlet pairCards = [];\n\n//Functions\nfunction drawCards(array) {\n  listResultsEl.innerHTML = '';\n  //Paint as many cards as the user choice\n  for (const element of array) {\n    const { image, pair } = element;\n\n    const itemEl = document.createElement('li');\n    itemEl.classList.add('item-card');\n\n    const divFaceEl = document.createElement('div');\n    divFaceEl.style.backgroundImage = `url(${image})`;\n    divFaceEl.setAttribute('data-pair', pair);\n    divFaceEl.classList.add('card', 'card--face', 'card--hidden');\n\n    const divBackEl = document.createElement('div');\n    divBackEl.classList.add('card', 'card--back');\n\n    itemEl.appendChild(divFaceEl);\n    itemEl.appendChild(divBackEl);\n    listResultsEl.appendChild(itemEl);\n  }\n}\n\nfunction handlerCardsClick(event) {\n  const selectedItemEl = event.currentTarget;\n  const selectedCardFaceEl = selectedItemEl.firstChild;\n  selectedCardFaceEl.classList.toggle('card--hidden');\n  const selectedCardBackEl = selectedItemEl.lastChild;\n  selectedCardBackEl.classList.toggle('card--hidden');\n\n  const selectedCardPairId = parseInt(\n    selectedItemEl.firstChild.getAttribute('data-pair')\n  );\n\n  //Instructions just to be applied when one card is already up. Condition??\n  const cardsUp = [];\n  const allCardsFaceEls = document.querySelectorAll('.card--face');\n\n  for (const card of allCardsFaceEls) {\n    if (card.classList.contains('card--hidden')) {\n      // console.log('card down');\n    } else {\n      cardsUp.push(card);\n    }\n  }\n  console.log(allCardsFaceEls);\n  console.log(cardsUp);\n\n  const numberOfCardsUp = cardsUp.length;\n  console.log(numberOfCardsUp);\n\n  if (numberOfCardsUp === 1) {\n    console.log(selectedCardPairId);\n    pairCards = [];\n    pairCards[0] = selectedCardPairId;\n    appMessageEl.innerHTML = 'busca su pareja!!';\n  } else if (numberOfCardsUp === 2) {\n    pairCards[1] = selectedCardPairId;\n    console.log('solo hay una carta boca arriba');\n    if (pairCards[0] === pairCards[1]) {\n      //Print message on HTML\n      appMessageEl.innerHTML = 'EUREKA!!!';\n      appMessageEl.classList.add('eureka');\n      pairCards = [];\n\n      console.log(cardsUp);\n      for (const card of cardsUp) {\n        card.style.transform = 'scale(1.2)';\n        setInterval(function() {\n          card.classList.add('card--hidden');\n          card.nextSibling.classList.remove('card--hidden');\n          card.style.transform = 'scale(1)';\n          appMessageEl.innerHTML = '';\n          appMessageEl.classList.remove('eureka');\n        }, 3000);\n      }\n    } else if (numberOfCardsUp === 3) {\n      pairCards = [];\n      appMessageEl.innerHTML = 'upsss';\n      for (const card of cardsUp) {\n        setInterval(function() {\n          card.classList.add('card--hidden');\n          card.nextSibling.classList.remove('card--hidden');\n          appMessageEl.innerHTML = '';\n        }, 1000);\n        console.log('no coinciden');\n      }\n    }\n  } else {\n    pairCards = [];\n    appMessageEl.innerHTML = '';\n    for (const card of cardsUp) {\n      setInterval(function() {\n        card.classList.add('card--hidden');\n        card.nextSibling.classList.remove('card--hidden');\n        appMessageEl.innerHTML = '';\n      }, 1000);\n      console.log('m√°s de una carta boca arriba');\n    }\n  }\n}\nfunction requestApi(URL) {\n  fetch(`${URL}`)\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(responsedParsed) {\n      cardsFromAPI = responsedParsed;\n      drawCards(cardsFromAPI);\n\n      const cardsItemsEls = document.querySelectorAll('.item-card');\n      for (const element of cardsItemsEls) {\n        element.addEventListener('click', handlerCardsClick);\n      }\n      return cardsFromAPI;\n    });\n}\n\nfunction saveOnLS(key, value) {\n  localStorage.setItem(key, value);\n}\n\nfunction retrieveFromLS(key) {\n  const infoSavedOnLS = parseInt(localStorage.getItem(key));\n\n  if (infoSavedOnLS) {\n    NUMBER = infoSavedOnLS;\n    for (const element of inputsRadioEls) {\n      const elementNumber = parseInt(element.getAttribute('data-number'));\n      if (elementNumber === NUMBER) {\n        element.setAttribute('checked', 'true');\n      }\n    }\n  }\n}\n\n//Handlers\nfunction handlerStartClick(event) {\n  event.preventDefault();\n  let userChoiceEl = '';\n\n  //Get user election\n  for (const element of inputsRadioEls) {\n    element.checked ? (userChoiceEl = element) : '';\n  }\n  NUMBER = parseInt(userChoiceEl.getAttribute('data-number'));\n\n  let URL = `https://raw.githubusercontent.com/Adalab/cards-data/master/${NUMBER}.json`;\n\n  saveOnLS('userChoice', NUMBER);\n  requestApi(URL);\n}\n\n//Init\nfunction init() {\n  retrieveFromLS('userChoice');\n  btnStartEl.addEventListener('click', handlerStartClick);\n}\ninit();\n"]}